name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test & Build
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run TypeScript type check
        run: npx tsc --noEmit

      - name: Run tests
        run: npm test -- --run

      - name: Generate test coverage
        run: npm run test:coverage -- --run

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        if: success()
        with:
          files: ./coverage/coverage-final.json
          flags: unittests
          name: codecov-umbrella

      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production

      - name: Check bundle size
        run: |
          if [ -d ".next" ]; then
            echo "Build successful!"
            du -sh .next
          else
            echo "Build failed - .next directory not found"
            exit 1
          fi

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npx next lint --max-warnings 0 || true
        # Allow lint warnings for now, but log them

  security:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Run npm audit
        run: npm audit --production || true
        # Continue even if vulnerabilities found, but log them

      - name: Check for security issues
        run: |
          echo "Checking for common security issues..."
          # Check for exposed secrets (basic check)
          ! grep -r "sk_test_" . || (echo "Warning: Possible exposed test keys" && exit 1)
          ! grep -r "pk_test_" . || (echo "Warning: Possible exposed test keys" && exit 1)
